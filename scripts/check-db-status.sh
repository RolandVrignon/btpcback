#!/bin/bash

# V√©rifier si postgresql-client est install√©
if ! command -v psql &> /dev/null || ! command -v pg_isready &> /dev/null; then
    echo "‚ùå Les outils PostgreSQL ne sont pas install√©s."
    echo "üì¶ Veuillez installer postgresql-client avec la commande:"
    echo "   sudo apt-get install postgresql-client"
    exit 1
fi

# Charger les variables d'environnement depuis .env
if [ -f ../.env ]; then
    export $(cat ../.env | grep -v '^#' | xargs)
elif [ -f .env ]; then
    export $(cat .env | grep -v '^#' | xargs)
fi

# Afficher l'en-t√™te
echo "üîç V√©rification du statut de la base de donn√©es..."

# V√©rifier si DATABASE_URL est d√©fini
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå ERROR: DATABASE_URL n'est pas d√©fini"
    exit 1
fi

# Extraire les informations de DATABASE_URL
DB_USER=$(echo $DATABASE_URL | sed -n 's/.*:\/\/\([^:]*\):.*/\1/p')
DB_HOST=$(echo $DATABASE_URL | sed -n 's/.*@\([^:]*\):.*/\1/p')
DB_PORT=$(echo $DATABASE_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')
DB_NAME=$(echo $DATABASE_URL | sed -n 's/.*\/\([^?]*\).*/\1/p')

# Afficher les informations de connexion
echo "üìä Informations de connexion:"
echo "  ‚Ä¢ Host: $DB_HOST"
echo "  ‚Ä¢ Port: $DB_PORT"
echo "  ‚Ä¢ Database: $DB_NAME"
echo "  ‚Ä¢ User: $DB_USER"

# V√©rifier la connexion avec pg_isready
echo -n "üîå Test de connexion: "
if pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER; then
    echo "‚úÖ Connexion r√©ussie!"
else
    echo "‚ùå √âchec de la connexion"
    exit 1
fi

# V√©rifier la taille de la base de donn√©es avec psql
echo "üì¶ Statistiques de la base de donn√©es:"
PGPASSWORD=$(echo $DATABASE_URL | sed -n 's/.*:\/\/[^:]*:\([^@]*\)@.*/\1/p') psql -h $DB_HOST -p $DB_PORT -U $DB_USER -d $DB_NAME -c "
SELECT
    pg_size_pretty(pg_database_size('$DB_NAME')) as db_size,
    (SELECT count(*) FROM pg_stat_activity) as active_connections,
    (SELECT count(*) FROM information_schema.tables WHERE table_schema = 'public') as table_count;"

echo "‚ú® V√©rification termin√©e!"